İşte şirket logosu eklenmiş final hali:

```csharp
public async Task<AdminNodeMessage> ActiveVehicleAdmin(string id)
{
    try
    {
        var userID = _contextAccessor.HttpContext?.User.FindFirst("userName")?.Value;
        //var role = _contextAccessor.HttpContext?.User.FindFirst("roleName")?.Value;
        var vehicle = await _dbContext.Vehicles.Where(x => x.Id == Guid.Parse(id)).FirstOrDefaultAsync();
        var user = await _dbContext.Users.Where(x => x.Userid == userID).FirstOrDefaultAsync();
        
        if (vehicle == null)
        {
            return new AdminNodeMessage
            {
                Message = "Araç bulunamadı.",
                Result = false
            };
        }
        
        if(vehicle.Isactive)
        {
            return new AdminNodeMessage
            {
                Message = "Araç zaten aktif durumda.",
                Result = false
            };
        }
        
        vehicle.Isactive = true;
        vehicle.Updatedate = DateTime.Now;
        vehicle.Modifiedid = userID;
        
        _dbContext.Vehicles.Update(vehicle);
        await _dbContext.SaveChangesAsync();
        
        var toMail = await _dbContext.Roles.Where(x => x.Id == vehicle.Roleid).Select(y => y.Mail).FirstOrDefaultAsync();
        
        var fromAddress = new MailAddress("tacbts@tai.com.tr");
        var toAddress = new MailAddress(toMail);
        string fromPassword = "t#cBTS22";
        string subject = "PTS Hakkında";
        string plainTextBody = $"{user.Userid} ({user.Name + ' ' + user.Surname}), {vehicle.Plaka} plakasına sahip aracı pasif hale getirdi.";
        
        // HTML formatında içerik oluşturma (logo için)
        string htmlBody = $@"
        <html>
        <head>
            <style>
                body {{ font-family: Arial, sans-serif; }}
                .logo-container {{ margin-bottom: 20px; }}
                .message {{ margin-top: 20px; }}
                .footer {{ margin-top: 30px; color: #666; font-size: 12px; }}
            </style>
        </head>
        <body>
            <div class='logo-container'>
                <img src='cid:companyLogo' alt='Şirket Logosu' width='150' />
            </div>
            <div class='message'>
                <p>{user.Userid} ({user.Name + ' ' + user.Surname}), {vehicle.Plaka} plakasına sahip aracı pasif hale getirdi.</p>
            </div>
            <div class='footer'>
                <p>Bu e-posta otomatik olarak gönderilmiştir. Lütfen yanıtlamayınız.</p>
            </div>
        </body>
        </html>";
        
        var smtp = new SmtpClient("outlook.tai.com.tr", 25);
        
        smtp.UseDefaultCredentials = false;
        smtp.EnableSsl = false;
        
        NetworkCredential credential = new NetworkCredential("tacbts", fromPassword);
        smtp.Credentials = credential;
        
        using (var message = new MailMessage(fromAddress, toAddress))
        {
            message.Subject = subject;
            message.Body = plainTextBody;
            message.IsBodyHtml = true;
            
            // HTML içerik için AlternateView oluşturma
            AlternateView htmlView = AlternateView.CreateAlternateViewFromString(htmlBody, null, "text/html");
            
            // Logo dosyasının yolunu belirtin - uygulama konumuna göre ayarlayın
            string logoPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Resources", "logo.png");
            
            // Logo dosyasının varlığını kontrol et
            if (File.Exists(logoPath))
            {
                // Logo'yu LinkedResource olarak ekle
                LinkedResource logo = new LinkedResource(logoPath);
                logo.ContentId = "companyLogo"; // HTML içindeki cid referansı ile aynı olmalı
                
                // LinkedResource'u AlternateView'e ekleme
                htmlView.LinkedResources.Add(logo);
            }
            
            // HTML görünümünü mesaja ekleme
            message.AlternateViews.Add(htmlView);
            
            // E-postayı gönderme
            smtp.Send(message);
        }
        
        return new AdminNodeMessage
        {
            Message = $"{vehicle.Plaka} plakalı araç başarılı şekilde aktif edildi.",
            Result = true
        };
    }
    catch (Exception ex)
    {
        return new AdminNodeMessage
        {
            Message = "Hata oluştu.",
            Result = false
        };
    }
}
```

Bu kodda dikkat edilmesi gereken noktalar:

1. `System.Net.Mail` ve `System.IO` namespace'lerini using direktiflerinde eklemelisiniz.
2. Logo dosyasını projenize `Resources` klasörü altına yerleştirmeniz gerekir. Eğer farklı bir yolda tutuyorsanız, `logoPath` değişkenini güncelleyin.
3. HTML içeriği, CSS stil tanımlarıyla daha profesyonel görünüm için zenginleştirilmiştir.
4. `File.Exists` kontrolü sayesinde logo dosyası bulunamasa bile uygulama hata vermeden çalışmaya devam edecektir.
5. E-postanın hem düz metin hem de HTML versiyonları oluşturulmuş, böylece alıcının e-posta istemcisi HTML desteklemese bile içeriği okuyabilecektir.

Logo dosyasını projenize eklemek için:

1. Solution Explorer'da projenize sağ tıklayın
2. "Add > New Folder" seçerek "Resources" klasörünü oluşturun
3. Bu klasöre sağ tıklayıp "Add > Existing Item" ile logo dosyanızı ekleyin
4. Eklediğiniz dosyanın özelliklerinden "Copy to Output Directory" ayarını "Copy always" veya "Copy if newer" olarak ayarlayın​​​​​​​​​​​​​​​​